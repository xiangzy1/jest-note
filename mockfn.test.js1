import { runCallback, getData } from './mockfn.js'
import axios from 'axios'
/**
 * mock函数
 * 捕获函数的调用和返回结果，以及this和调用顺序
 * 可以自由设置返回结果
 * 改变内部函数的实现
 */
test('test runcallback', () => {
  // jest生成的函数(mock函数)
  const func = jest.fn()
  runCallback(func)
  expect(func).toBeCalled()
})
test('test runcallback', () => {
  // jest生成的函数(mock函数)
  const func = jest.fn()
  // 模拟返回结果一次 第二次就是undefined了
  func.mockReturnValueOnce('D')
  runCallback(func)
  runCallback(func)
  // 被调用了两次
  expect(func.mock.calls.length).toBe(2)
  // 期望参数是abc
  expect(func.mock.calls[0]).toEqual(['abc'])
})

jest.mock('axios')
test('test getdata', async () => {
  // 改变内部函数的实现 改变了axios实现
  axios.get.mockResolvedValue({ data: 'hello' })
  await getData().then((data) => {
    expect(data).toBe('hello')
  })
})
